{"version":3,"sources":["webpack://@askvortsov/flarum-checklist/webpack/bootstrap","webpack://@askvortsov/flarum-checklist/external \"flarum.core.compat['extend']\"","webpack://@askvortsov/flarum-checklist/external \"flarum.extensions['askvortsov-rich-text']\"","webpack://@askvortsov/flarum-checklist/external \"flarum.core.compat['components/CommentPost']\"","webpack://@askvortsov/flarum-checklist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@askvortsov/flarum-checklist/./src/forum/markdown-it/checkboxPlugin.js","webpack://@askvortsov/flarum-checklist/./src/forum/proseMirror/checkboxEditorPlugin.js","webpack://@askvortsov/flarum-checklist/./src/forum/configureRichText.js","webpack://@askvortsov/flarum-checklist/./src/forum/proseMirror/keymap.js","webpack://@askvortsov/flarum-checklist/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","extensions","_extends","assign","target","arguments","length","source","apply","this","isParagraphOpenToken","type","isInlineToken","rule","state","edited","tokens","inlineToken","match","exec","content","checked","slice","children","checkboxToken","getPrototypeOf","hidden","attrPush","splice","checkboxPlugin","md","ruler","push","ListItemNodeView","node","view","getPos","dom","contentDOM","document","createElement","schema","recalcTaskStatus","update","setAttribute","attrs","removeAttribute","CheckBoxNodeView","onclick","pos","dispatch","tr","setNodeMarkup","undefined","contentDom","configureRichText","MarkdownSerializerBuilder","require","proseMirror","markdown","extend","nodes","list_checkbox","text","MarkdownParserBuilder","getAttrs","tok","attrGet","tokenizer","use","SchemaBuilder","override","original","addBefore","defining","group","default","parseDOM","tag","isElementDOMNode","hasAttribute","toDOM","ProseMirrorEditorDriver","items","add","Plugin","props","nodeViews","list_item","InputRule","start","end","$from","selection","depth","index","listItemPos","before","insert","list_item_node","checkbox_node","liftListItem","splitListItem","Selection","keymap","Enter","path","$anchor","prevCheckbox","prevParagraph","to","doc","resolve","from","setSelection","near","app","initializers","processChecklists","post","canEdit","$","each","element","disabled","onchange","remainingCheckboxes","checkListRegex","currContent","valIndex","substring","save","then","redraw","toggleCheckbox","CommentPost"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.extensions['askvortsov-rich-text'];","module.exports = flarum.core.compat['components/CommentPost'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function isListItemToken(t) {\n  return t.type === 'list_item_open';\n}\nfunction isParagraphOpenToken(t) {\n  return t.type === 'paragraph_open';\n}\nfunction isInlineToken(t) {\n  return t.type === 'inline';\n}\n\nconst rule = (state) => {\n  let edited = false;\n  const tokens = state.tokens;\n  const tokensLength = tokens.length;\n  for (let i = tokensLength - 3; i >= 0; i--) {\n    if (isListItemToken(tokens[i]) && isParagraphOpenToken(tokens[i + 1]) && isInlineToken(tokens[i + 2])) {\n      const inlineToken = tokens[i + 2];\n      const match = /^\\[([ |x|X])\\]\\s?/.exec(inlineToken.content);\n      if (match) {\n        const checked = match[1] === 'x' || match[1] === 'X';\n        inlineToken.content = inlineToken.content.slice(match[0].length);\n        inlineToken.children[0].content = inlineToken.content;\n        const checkboxToken = new (Object.getPrototypeOf(state).Token)('list_checkbox', 'input', 0);\n\n        // Needed so that checklists will be tight\n        // Has no effect since we don't use Markdown it's renderer.\n        checkboxToken.hidden = true;\n        checkboxToken.attrPush(['type', 'checkbox']);\n        if (checked) {\n          checkboxToken.attrPush(['checked', '']);\n        }\n        tokens.splice(i + 1, 0, checkboxToken);\n        edited = true;\n      }\n    }\n  }\n  return edited;\n};\n\n// A markdown-it plugin for selectable list checkbox\nfunction checkboxPlugin(md) {\n  md.core.ruler.push('markdown-it-list-checkbox', rule);\n}\n\nexport default checkboxPlugin;\n","class ListItemNodeView {\n  constructor(node, view, getPos) {\n    this.dom = this.contentDOM = document.createElement('li');\n    this.schema = view.state.schema;\n    this.recalcTaskStatus(node);\n  }\n\n  update(node) {\n    this.recalcTaskStatus(node);\n  }\n\n  recalcTaskStatus(node) {\n    if (node.content.content[0] && node.content.content[0].type.name === 'list_checkbox') {\n      this.contentDOM.setAttribute('data-task-id', '');\n      this.contentDOM.setAttribute('data-task-state', node.content.content[0].attrs.checked ? 'checked' : 'unchecked');\n    } else {\n      this.contentDOM.removeAttribute('data-task-id');\n      this.contentDOM.removeAttribute('data-task-state');\n    }\n  }\n}\n\nclass CheckBoxNodeView {\n  constructor(node, view, getPos) {\n    let checked = !!node.attrs.checked;\n    const dom = document.createElement('input');\n    dom.setAttribute('type', 'checkbox');\n    dom.onclick = () => {\n      const pos = getPos();\n      checked = !checked;\n      view.dispatch(view.state.tr.setNodeMarkup(pos, undefined, { checked }));\n    };\n    if (node.attrs.checked) dom.setAttribute('checked', '');\n\n    this.dom = this.contentDom = dom;\n  }\n}\n\nexport default function checkboxEditorPlugin() {\n  const Plugin = require('@askvortsov-rich-text').Plugin;\n  return new Plugin({\n    props: {\n      nodeViews: {\n        list_checkbox: function (node, view, getPos) {\n          return new CheckBoxNodeView(node, view, getPos);\n        },\n        list_item: function (node, view, getPos) {\n          return new ListItemNodeView(node, view, getPos);\n        },\n      },\n    },\n  });\n}\n","import { extend, override } from 'flarum/extend';\nimport checkboxPlugin from './markdown-it/checkboxPlugin';\nimport checkboxEditorPlugin from './proseMirror/checkboxEditorPlugin';\nimport keymap from './proseMirror/keymap';\n\nexport default function configureRichText() {\n  if (!('askvortsov-rich-text' in flarum.extensions)) return;\n\n  // const ProseMirrorMenu = require('@askvortsov-rich-text').components.LinkButtonnu;\n\n  // extend(ProseMirrorMenu.prototype, 'items', function (items) {\n  //     items.add('check_list', LinkButton.component({\n  //         type: 'check_list',\n  //         icon: 'fas check-square',\n  //         tooltip: app.translator.trans('askvortsov-pipetables.forum.composer.table_tooltip'),\n  //         state: this.attrs.state,\n  //         listType: this.attrs.state.getSchema().nodes.task_list,\n  //     }), 10);\n  // });\n\n  const MarkdownSerializerBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownSerializerBuilder;\n\n  extend(MarkdownSerializerBuilder.prototype, 'buildNodes', function (nodes) {\n    nodes.list_checkbox = function list_checkbox(state, node) {\n      state.text(node.attrs.checked ? '[x] ' : '[ ] ', false);\n    };\n  });\n\n  const MarkdownParserBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownParserBuilder;\n\n  extend(MarkdownParserBuilder.prototype, 'buildTokens', function (tokens) {\n    Object.assign(tokens, {\n      list_checkbox: { node: 'list_checkbox', getAttrs: (tok) => ({ checked: tok.attrGet('checked') === '' }) },\n    });\n  });\n\n  extend(MarkdownParserBuilder.prototype, 'buildTokenizer', function (tokenizer) {\n    tokenizer.use(checkboxPlugin);\n  });\n\n  const SchemaBuilder = require('@askvortsov-rich-text').proseMirror.markdown.SchemaBuilder;\n\n  override(SchemaBuilder.prototype, 'buildNodes', function (original) {\n    const nodes = original();\n\n    return nodes\n      .update('list_item', Object.assign({}, nodes.get('list_item'), { content: 'list_checkbox? paragraph block*' }))\n      .addBefore('list_item', 'list_checkbox', {\n        defining: true,\n        group: 'list_checkbox',\n        attrs: {\n          checked: { default: false },\n        },\n        parseDOM: [\n          {\n            tag: 'input[type=checkbox]',\n            getAttrs: (dom) => (isElementDOMNode(dom) ? { checked: dom.hasAttribute('checked') } : {}),\n          },\n        ],\n        toDOM(node) {\n          const attrs = { type: 'checkbox' };\n          if (node.attrs.checked) attrs.checked = '';\n          return ['input', attrs];\n        },\n      });\n  });\n\n  const ProseMirrorEditorDriver = require('@askvortsov-rich-text').proseMirror.ProseMirrorEditorDriver;\n\n  extend(ProseMirrorEditorDriver.prototype, 'buildPluginItems', function (items) {\n    items.add('checkboxEditorPlugin', checkboxEditorPlugin());\n  });\n\n  const InputRule = require('@askvortsov-rich-text').InputRule;\n\n  extend(ProseMirrorEditorDriver.prototype, 'buildInputRules', function (items) {\n    items.push(\n      new InputRule(/^\\[([ |x])\\] $/, function (state, match, start, end) {\n        const $from = state.selection.$from;\n        if (\n          $from.depth >= 3 &&\n          $from.node(-1).type.name === 'list_item' &&\n          $from.index(-1) === 0 // The cursor is at the first child (paragraph) of this list item.\n        ) {\n          const attrs = { checked: match[1] === 'x' };\n          const listItemPos = $from.before(-1);\n          return state.tr.delete(start, end).insert(listItemPos + 1, state.schema.nodes.list_checkbox.create(attrs));\n        }\n        return null;\n      })\n    );\n  });\n\n  extend(ProseMirrorEditorDriver.prototype, 'buildPluginItems', function (items) {\n    items.add('checkListKeymap', require('@askvortsov-rich-text').keymap(keymap(this.schema)), 10);\n  });\n}\n","function splitListItemCheckbox(list_item_node, checkbox_node) {\n  const liftListItem = require('@askvortsov-rich-text').liftListItem;\n  const splitListItem = require('@askvortsov-rich-text').splitListItem;\n  const Selection = require('@askvortsov-rich-text').Selection;\n\n  return function (state, dispatch, view) {\n    const path = state.selection.$anchor.path;\n\n    let i;\n    for (i = path.length - 1; i >= 0; i--) {\n      if (path[i].type && path[i].type === list_item_node) {\n        break;\n      }\n    }\n\n    const prevCheckbox = path[i] && path[i].content.content[0];\n\n    if (!prevCheckbox || prevCheckbox.type !== checkbox_node) return false;\n\n    const prevParagraph = path[i].content.content[1];\n\n    if (prevParagraph && !prevParagraph.content.content.length) {\n      dispatch(view.state.tr.delete(path[i + 2] - 1, view.state.selection.to));\n\n      const newPos = view.state.doc.resolve(view.state.selection.from - 1);\n      dispatch(view.state.tr.setSelection(Selection.near(view.state.doc.resolve(state.selection.from - 1))));\n      return liftListItem(list_item_node)(state, dispatch);\n    }\n\n    if (!splitListItem(list_item_node)(state, dispatch)) return false;\n\n    const listItemPos = view.state.selection.$from.before(-1);\n    dispatch(view.state.tr.insert(listItemPos + 1, checkbox_node.create({ checked: false })));\n\n    return true;\n  };\n}\n\nexport default function keymap(schema) {\n  return {\n    Enter: splitListItemCheckbox(schema.nodes.list_item, schema.nodes.list_checkbox),\n  };\n}\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport configureRichText from './configureRichText';\n\napp.initializers.add('askvortsov/flarum-checklist', () => {\n  function toggleCheckbox(post, remainingCheckboxes, checked) {\n    let match;\n    const checkListRegex = /([\\-\\*]|[0-9]+\\.) (\\[[ xX]\\])/g;\n    const currContent = post.content();\n\n    while ((match = checkListRegex.exec(currContent))) {\n      if (remainingCheckboxes === 0) {\n        const valIndex = match.index + match[0].length - 2;\n        let content = currContent.substring(0, valIndex) + (checked ? 'x' : ' ') + currContent.substring(valIndex + 1);\n\n        post.save({ content }).then(() => {\n          m.redraw();\n        });\n        return;\n      }\n      remainingCheckboxes--;\n    }\n  }\n\n  function processChecklists() {\n    const post = this.attrs.post;\n    if (!post.canEdit()) return;\n\n    this.$('input[type=\"checkbox\"]').each(function (i, element) {\n      element.disabled = false;\n\n      element.onchange = () => {\n        toggleCheckbox(post, i, element.checked);\n      };\n    });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', processChecklists);\n  extend(CommentPost.prototype, 'onupdate', processChecklists);\n\n  configureRichText();\n});\n"],"sourceRoot":""}