{"version":3,"sources":["webpack://@askvortsov/flarum-checklist/webpack/bootstrap","webpack://@askvortsov/flarum-checklist/external \"flarum.extensions['askvortsov-rich-text']\"","webpack://@askvortsov/flarum-checklist/external \"flarum.core.compat['extend']\"","webpack://@askvortsov/flarum-checklist/./src/common/configureStrikeOut.js","webpack://@askvortsov/flarum-checklist/external \"flarum.core.compat['common/Application']\"","webpack://@askvortsov/flarum-checklist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@askvortsov/flarum-checklist/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@askvortsov/flarum-checklist/./src/common/components/ChecklistButton.js","webpack://@askvortsov/flarum-checklist/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@askvortsov/flarum-checklist/./src/common/markdown-it/checkboxPlugin.js","webpack://@askvortsov/flarum-checklist/./src/common/proseMirror/checkboxEditorPlugin.js","webpack://@askvortsov/flarum-checklist/./src/common/configureRichText.js","webpack://@askvortsov/flarum-checklist/./src/common/proseMirror/insertChecklistCommand.js","webpack://@askvortsov/flarum-checklist/./src/common/proseMirror/keymap.js","webpack://@askvortsov/flarum-checklist/external \"flarum.core.compat['components/CommentPost']\"","webpack://@askvortsov/flarum-checklist/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","extensions","core","compat","extend","Application","this","forum","attribute","$","addClass","_extends","assign","target","arguments","length","source","apply","_setPrototypeOf","setPrototypeOf","__proto__","subClass","superClass","constructor","onEditorUpdate","active","path","state","editorView","selection","$anchor","type","getSchema","nodes","list_item","prevCheckbox","content","list_checkbox","toggleClass","require","components","CommandButton","isParagraphOpenToken","isInlineToken","rule","edited","tokens","inlineToken","match","exec","checked","slice","children","checkboxToken","getPrototypeOf","hidden","attrPush","splice","checkboxPlugin","md","ruler","push","ListItemNodeView","node","view","getPos","dom","contentDOM","document","createElement","schema","recalcTaskStatus","update","setAttribute","attrs","removeAttribute","CheckBoxNodeView","onclick","pos","dispatch","tr","setNodeMarkup","undefined","contentDom","configureRichText","ProseMirrorMenu","ChecklistButtonComponent","ChecklistButton","items","listNodeType","listItemNodeType","checkboxNodeType","wrapInList","add","component","icon","tooltip","app","translator","trans","command","bullet_list","insert","MarkdownSerializerBuilder","proseMirror","markdown","text","MarkdownParserBuilder","getAttrs","tok","attrGet","tokenizer","use","SchemaBuilder","override","original","addBefore","defining","group","default","parseDOM","tag","isElementDOMNode","hasAttribute","toDOM","ProseMirrorEditorDriver","Plugin","props","nodeViews","InputRule","start","end","$from","depth","index","listItemPos","before","list_item_node","checkbox_node","liftListItem","splitListItem","Selection","keymap","Enter","prevParagraph","to","doc","resolve","from","setSelection","near","initializers","processChecklists","post","canEdit","each","element","disabled","onchange","remainingCheckboxes","checkListRegex","currContent","valIndex","substring","save","then","redraw","toggleCheckbox","CommentPost","configureStrikeOut"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = flarum.extensions['askvortsov-rich-text'];","module.exports = flarum.core.compat['extend'];","import { extend } from 'flarum/extend';\nimport Application from 'flarum/common/Application';\n\nexport default function () {\n  extend(Application.prototype, 'boot', function () {\n    if (this.forum.attribute('askvortsov-checklist.cross_out_completed_items')) {\n      $('.App').addClass('checklist-cross-completed');\n    }\n  });\n}\n","module.exports = flarum.core.compat['common/Application'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function () {\n  const CommandButton = require('@askvortsov-rich-text').components.CommandButton;\n\n  class ChecklistButton extends CommandButton {\n    onEditorUpdate() {\n      let active = true;\n      const path = this.state.editorView.state.selection.$anchor.path;\n\n      let i;\n      for (i = path.length - 1; i >= 0; i--) {\n        if (path[i].type && path[i].type === this.state.getSchema().nodes.list_item) {\n          break;\n        }\n      }\n\n      const prevCheckbox = path[i] && path[i].content.content[0];\n\n      if (!prevCheckbox || prevCheckbox.type !== this.state.getSchema().nodes.list_checkbox) active = false;\n\n      this.$().toggleClass('active', active);\n    }\n  }\n\n  return ChecklistButton;\n}\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","function isListItemToken(t) {\n  return t.type === 'list_item_open';\n}\nfunction isParagraphOpenToken(t) {\n  return t.type === 'paragraph_open';\n}\nfunction isInlineToken(t) {\n  return t.type === 'inline';\n}\n\nconst rule = (state) => {\n  let edited = false;\n  const tokens = state.tokens;\n  const tokensLength = tokens.length;\n  for (let i = tokensLength - 3; i >= 0; i--) {\n    if (isListItemToken(tokens[i]) && isParagraphOpenToken(tokens[i + 1]) && isInlineToken(tokens[i + 2])) {\n      const inlineToken = tokens[i + 2];\n      const match = /^\\[([ |x|X])\\]\\s?/.exec(inlineToken.content);\n      if (match) {\n        const checked = match[1] === 'x' || match[1] === 'X';\n        inlineToken.content = inlineToken.content.slice(match[0].length);\n        inlineToken.children[0].content = inlineToken.content;\n        const checkboxToken = new (Object.getPrototypeOf(state).Token)('list_checkbox', 'input', 0);\n\n        // Needed so that checklists will be tight\n        // Has no effect since we don't use Markdown it's renderer.\n        checkboxToken.hidden = true;\n        checkboxToken.attrPush(['type', 'checkbox']);\n        if (checked) {\n          checkboxToken.attrPush(['checked', '']);\n        }\n        tokens.splice(i + 1, 0, checkboxToken);\n        edited = true;\n      }\n    }\n  }\n  return edited;\n};\n\n// A markdown-it plugin for selectable list checkbox\nfunction checkboxPlugin(md) {\n  md.core.ruler.push('markdown-it-list-checkbox', rule);\n}\n\nexport default checkboxPlugin;\n","class ListItemNodeView {\n  constructor(node, view, getPos) {\n    this.dom = this.contentDOM = document.createElement('li');\n    this.schema = view.state.schema;\n    this.recalcTaskStatus(node);\n  }\n\n  update(node) {\n    this.recalcTaskStatus(node);\n  }\n\n  recalcTaskStatus(node) {\n    if (node.content.content[0] && node.content.content[0].type.name === 'list_checkbox') {\n      this.contentDOM.setAttribute('data-task-id', '');\n      this.contentDOM.setAttribute('data-task-state', node.content.content[0].attrs.checked ? 'checked' : 'unchecked');\n    } else {\n      this.contentDOM.removeAttribute('data-task-id');\n      this.contentDOM.removeAttribute('data-task-state');\n    }\n  }\n}\n\nclass CheckBoxNodeView {\n  constructor(node, view, getPos) {\n    let checked = !!node.attrs.checked;\n    const dom = document.createElement('input');\n    dom.setAttribute('type', 'checkbox');\n    dom.onclick = () => {\n      const pos = getPos();\n      checked = !checked;\n      view.dispatch(view.state.tr.setNodeMarkup(pos, undefined, { checked }));\n    };\n    if (node.attrs.checked) dom.setAttribute('checked', '');\n\n    this.dom = this.contentDom = dom;\n  }\n}\n\nexport default function checkboxEditorPlugin() {\n  const Plugin = require('@askvortsov-rich-text').Plugin;\n  return new Plugin({\n    props: {\n      nodeViews: {\n        list_checkbox: function (node, view, getPos) {\n          return new CheckBoxNodeView(node, view, getPos);\n        },\n        list_item: function (node, view, getPos) {\n          return new ListItemNodeView(node, view, getPos);\n        },\n      },\n    },\n  });\n}\n","import { extend, override } from 'flarum/extend';\nimport ChecklistButton from './components/ChecklistButton';\nimport checkboxPlugin from './markdown-it/checkboxPlugin';\nimport checkboxEditorPlugin from './proseMirror/checkboxEditorPlugin';\nimport insertChecklistCommand from './proseMirror/insertChecklistCommand';\nimport keymap from './proseMirror/keymap';\n\nexport default function configureRichText() {\n  if (!('askvortsov-rich-text' in flarum.extensions)) return;\n\n  const ProseMirrorMenu = require('@askvortsov-rich-text').components.ProseMirrorMenu;\n  const ChecklistButtonComponent = ChecklistButton();\n\n  extend(ProseMirrorMenu.prototype, 'items', function (items) {\n    items.add(\n      'check_list',\n      ChecklistButtonComponent.component({\n        type: 'check_list',\n        icon: 'fas fa-check-square',\n        tooltip: app.translator.trans('askvortsov-checklist.forum.composer.checklist_tooltip'),\n        state: this.attrs.state,\n        command: insertChecklistCommand(\n          this.attrs.state.getSchema().nodes.bullet_list,\n          this.attrs.state.getSchema().nodes.list_item,\n          this.attrs.state.getSchema().nodes.list_checkbox\n        ),\n      }),\n      10\n    );\n  });\n\n  const MarkdownSerializerBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownSerializerBuilder;\n\n  extend(MarkdownSerializerBuilder.prototype, 'buildNodes', function (nodes) {\n    nodes.list_checkbox = function list_checkbox(state, node) {\n      state.text(node.attrs.checked ? '[x] ' : '[ ] ', false);\n    };\n  });\n\n  const MarkdownParserBuilder = require('@askvortsov-rich-text').proseMirror.markdown.MarkdownParserBuilder;\n\n  extend(MarkdownParserBuilder.prototype, 'buildTokens', function (tokens) {\n    Object.assign(tokens, {\n      list_checkbox: { node: 'list_checkbox', getAttrs: (tok) => ({ checked: tok.attrGet('checked') === '' }) },\n    });\n  });\n\n  extend(MarkdownParserBuilder.prototype, 'buildTokenizer', function (tokenizer) {\n    tokenizer.use(checkboxPlugin);\n  });\n\n  const SchemaBuilder = require('@askvortsov-rich-text').proseMirror.markdown.SchemaBuilder;\n\n  override(SchemaBuilder.prototype, 'buildNodes', function (original) {\n    const nodes = original();\n\n    return nodes\n      .update('list_item', Object.assign({}, nodes.get('list_item'), { content: 'list_checkbox? paragraph block*' }))\n      .addBefore('list_item', 'list_checkbox', {\n        defining: true,\n        group: 'list_checkbox',\n        attrs: {\n          checked: { default: false },\n        },\n        parseDOM: [\n          {\n            tag: 'input[type=checkbox]',\n            getAttrs: (dom) => (isElementDOMNode(dom) ? { checked: dom.hasAttribute('checked') } : {}),\n          },\n        ],\n        toDOM(node) {\n          const attrs = { type: 'checkbox' };\n          if (node.attrs.checked) attrs.checked = '';\n          return ['input', attrs];\n        },\n      });\n  });\n\n  const ProseMirrorEditorDriver = require('@askvortsov-rich-text').proseMirror.ProseMirrorEditorDriver;\n\n  extend(ProseMirrorEditorDriver.prototype, 'buildPluginItems', function (items) {\n    items.add('checkboxEditorPlugin', checkboxEditorPlugin());\n  });\n\n  const InputRule = require('@askvortsov-rich-text').InputRule;\n\n  extend(ProseMirrorEditorDriver.prototype, 'buildInputRules', function (items) {\n    items.push(\n      new InputRule(/^\\[([ |x]?)\\] $/, function (state, match, start, end) {\n        const $from = state.selection.$from;\n        if (\n          $from.depth >= 3 &&\n          $from.node(-1).type.name === 'list_item' &&\n          $from.index(-1) === 0 // The cursor is at the first child (paragraph) of this list item.\n        ) {\n          const attrs = { checked: match[1] === 'x' };\n          const listItemPos = $from.before(-1);\n          return state.tr.delete(start, end).insert(listItemPos + 1, state.schema.nodes.list_checkbox.create(attrs));\n        }\n        return null;\n      })\n    );\n  });\n\n  extend(ProseMirrorEditorDriver.prototype, 'buildPluginItems', function (items) {\n    items.add('checkListKeymap', require('@askvortsov-rich-text').keymap(keymap(this.schema)), 10);\n  });\n}\n","export default function (listNodeType, listItemNodeType, checkboxNodeType) {\n  const wrapInList = require('@askvortsov-rich-text').wrapInList;\n\n  return function (state, dispatch, view) {\n    let path = state.selection.$anchor.path;\n\n    let i;\n    for (i = path.length - 1; i >= 0; i--) {\n      if (path[i].type && path[i].type === listItemNodeType) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      wrapInList(listNodeType)(view.state, view.dispatch);\n    }\n\n    path = view.state.selection.$anchor.path;\n    for (i = path.length - 1; i >= 0; i--) {\n      if (path[i].type && path[i].type === listItemNodeType) {\n        break;\n      }\n    }\n\n    const prevCheckbox = path[i] && path[i].content.content[0];\n    if (!prevCheckbox || prevCheckbox.type !== checkboxNodeType) {\n      dispatch(view.state.tr.insert(path[i + 2], checkboxNodeType.create({ checked: false })));\n    } else {\n      dispatch(view.state.tr.delete(path[i + 2] - 1, path[i + 2]));\n    }\n\n    return true;\n  };\n}\n","function splitListItemCheckbox(list_item_node, checkbox_node) {\n  const liftListItem = require('@askvortsov-rich-text').liftListItem;\n  const splitListItem = require('@askvortsov-rich-text').splitListItem;\n  const Selection = require('@askvortsov-rich-text').Selection;\n\n  return function (state, dispatch, view) {\n    const path = state.selection.$anchor.path;\n\n    let i;\n    for (i = path.length - 1; i >= 0; i--) {\n      if (path[i].type && path[i].type === list_item_node) {\n        break;\n      }\n    }\n\n    const prevCheckbox = path[i] && path[i].content.content[0];\n\n    if (!prevCheckbox || prevCheckbox.type !== checkbox_node) return false;\n\n    const prevParagraph = path[i].content.content[1];\n\n    if (prevParagraph && !prevParagraph.content.content.length) {\n      dispatch(view.state.tr.delete(path[i + 2] - 1, view.state.selection.to));\n\n      const newPos = view.state.doc.resolve(view.state.selection.from - 1);\n      dispatch(view.state.tr.setSelection(Selection.near(view.state.doc.resolve(state.selection.from - 1))));\n      return liftListItem(list_item_node)(state, dispatch);\n    }\n\n    if (!splitListItem(list_item_node)(state, dispatch)) return false;\n\n    const listItemPos = view.state.selection.$from.before(-1);\n    dispatch(view.state.tr.insert(listItemPos + 1, checkbox_node.create({ checked: false })));\n\n    return true;\n  };\n}\n\nexport default function keymap(schema) {\n  return {\n    Enter: splitListItemCheckbox(schema.nodes.list_item, schema.nodes.list_checkbox),\n  };\n}\n","module.exports = flarum.core.compat['components/CommentPost'];","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport configureRichText from '../common/configureRichText';\nimport configureStrikeOut from '../common/configureStrikeOut';\n\napp.initializers.add('askvortsov/flarum-checklist', () => {\n  function toggleCheckbox(post, remainingCheckboxes, checked) {\n    let match;\n    const checkListRegex = /([\\-\\*]|[0-9]+\\.) (\\[[ xX]\\])/g;\n    const currContent = post.content();\n\n    while ((match = checkListRegex.exec(currContent))) {\n      if (remainingCheckboxes === 0) {\n        const valIndex = match.index + match[0].length - 2;\n        let content = currContent.substring(0, valIndex) + (checked ? 'x' : ' ') + currContent.substring(valIndex + 1);\n\n        post.save({ content }).then(() => {\n          m.redraw();\n        });\n        return;\n      }\n      remainingCheckboxes--;\n    }\n  }\n\n  function processChecklists() {\n    const post = this.attrs.post;\n    if (!post.canEdit()) return;\n\n    this.$('input[type=\"checkbox\"]').each(function (i, element) {\n      element.disabled = false;\n\n      element.onchange = () => {\n        toggleCheckbox(post, i, element.checked);\n      };\n    });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', processChecklists);\n  extend(CommentPost.prototype, 'onupdate', processChecklists);\n\n  configureRichText();\n  configureStrikeOut();\n});\n"],"sourceRoot":""}